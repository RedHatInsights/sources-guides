require 'sources-api-client'
require 'pp'

# Set this variable to the string generated by the scripts/api/gen_identity.sh script.
# x_rh_identity = 'some long string of characters'
x_rh_identity = `api/gen_identity.sh`

SourcesApiClient.configure do |config|
  # config.debugging = true
  config.scheme = 'http'
  config.host   = 'localhost:3002'
  config.params_encoding = :rack
end

api_instance = SourcesApiClient::DefaultApi.new
api_instance.api_client.default_headers = {:x_rh_identity => x_rh_identity}

opts = {
  limit: 100, # Integer | The numbers of items to return per page.
  offset: 0   # Integer | The number of items to skip before starting to collect the result set.
}

begin
  # Get ApplicationTypes
  result = api_instance.list_application_types(opts.merge({filter: { :name => '/insights/platform/catalog'}}))
  application_type = result.data.first
  pp application_type
  puts

  # Get source
  result = api_instance.list_sources(opts.merge({:filter => { :name => 'Ansible Tower Source' }}))
  compatible_source = result.data.first
  pp compatible_source
  puts

  #List Applications
  opts[:filter] = nil
  result = api_instance.list_applications(opts)
  pp result
  puts
rescue SourcesApiClient::ApiError => e
  puts "Exception when calling DefaultApi->list_application_types: #{e}"
end
